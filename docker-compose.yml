version: '3.8'

services:
  flyway:
    image: flyway/flyway:latest
    volumes:
      - ./flyway/conf:/flyway/conf
      - ./flyway/sql:/flyway/sql
    networks:
      - prometheus-network
    command: ["migrate"]
    environment:
      - FLYWAY_URL=jdbc:postgresql://db:5432/database
      - FLYWAY_USER=postgres
      - FLYWAY_PASSWORD=postgres
      - FLYWAY_LOCATIONS=filesystem:/flyway/sql
      - FLYWAY_PLACEHOLDERS_CORTAGES_COUNT_MAIN_ENTITIES=1000000
      - FLYWAY_PLACEHOLDERS_CORTAGES_COUNT_MIDDLE_ENTITIES=100000
      - FLYWAY_PLACEHOLDERS_CORTAGES_COUNT_SMALL_ENTITIES=10000
    depends_on:
      - db

  explain-analyze-service:
    build:
      context: ./ExplainAnalyzeService/
      dockerfile: ExplainAnalyzeService/Dockerfile
    volumes:
      - ./explain-analyze-files:/app/explain_analyze_files
    networks:
      - prometheus-network
    environment:
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "database"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      NUM_ATTEMPTS: "4"
    depends_on:
      - db

  feedback-table-service:
    build:
      context: ./FeedbackTableScript/
      dockerfile: FeedbackTableScript/Dockerfile
    networks:
      - prometheus-network
    restart: always
    environment:
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "database"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
    depends_on:
      - db

  backup-service:
    build:
      context: ./BackupService/
      dockerfile: BackupService/Dockerfile
    networks:
      - prometheus-network
    volumes:
      - ./backups:/src/BackupService/backups
    environment:
      BACKUP_DELAY: 1
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "database"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      KEEP_BACKUPS: "3"
      BACKUP_DIR: "/src/BackupService/backups"
    entrypoint: sh -c '/etc/init.d/cron start && tail -f /var/log/cron.log'
    depends_on:
      - db
  
  db:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    networks:
      - prometheus-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    networks:
      - prometheus-network
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/database?sslmode=disable"
    volumes:
      - ./queries.yml:/etc/postgres_exporter/queries.yml
    ports:
      - "9187:9187"
    command:
      - '--extend.query-path=/etc/postgres_exporter/queries.yml'
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    user: root
    networks:
      - prometheus-network
    volumes:
      - ./prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - postgres_exporter
    ports:
      - "9091:9090"

  grafana:
    image: grafana/grafana
    networks:
      - prometheus-network
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    

networks:
  prometheus-network:
    driver: bridge

